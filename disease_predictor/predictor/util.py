from datetime import datetime
from predictor.models import User
import smtplib
from email.message import EmailMessage

feature_names_breast_cancer = ['mean radius', 'mean texture', 'mean perimeter', 'mean area',
                     'mean smoothness', 'mean compactness', 'mean concavity',
                     'mean concave points', 'mean symmetry', 'mean fractal dimension',
                     'radius error', 'texture error', 'perimeter error', 'area error',
                     'smoothness error', 'compactness error', 'concavity error',
                     'concave points error', 'symmetry error', 'fractal dimension error',
                     'worst radius', 'worst texture', 'worst perimeter', 'worst area',
                     'worst smoothness', 'worst compactness', 'worst concavity',
                     'worst concave points', 'worst symmetry', 'worst fractal dimension']

feature_names_heart_disease = [
    'cp', 'trestbps', 'chol', 'fbs', 'restecg', 'thalach',
    'exang', 'oldpeak', 'slope', 'ca', 'thal'
]

feature_names_parkinsons_disease = [
    'MDVP:Fo(Hz)', 'MDVP:Fhi(Hz)', 'MDVP:Flo(Hz)', 'MDVP:Jitter(%)',
    'MDVP:Jitter(Abs)', 'MDVP:RAP', 'MDVP:PPQ', 'Jitter:DDP',
    'MDVP:Shimmer', 'MDVP:Shimmer(dB)', 'Shimmer:APQ3', 'Shimmer:APQ5',
    'MDVP:APQ', 'Shimmer:DDA', 'NHR', 'HNR', 'RPDE', 'DFA',
    'spread1', 'spread2', 'D2', 'PPE'
]

def generate_medical_report(patient_name, disease_type, result):

    theme_color = "#4CAF50" 
    disclaimer_color = "#FF5722"  

    html_body = f"""
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Medical Report</title>
        <style>
            body {{
                font-family: Arial, sans-serif;
                margin: 0;
                padding: 0;
                background-color: #f2f2f2;
            }}
            .container {{
                max-width: 600px;
                margin: 20px auto;
                background-color: white;
                padding: 20px;
                border-radius: 10px;
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            }}
            h1, h2, p {{
                color: {theme_color};
                margin: 0;
                padding: 0;
            }}
            .disclaimer {{
                color: {disclaimer_color};
                font-style: italic;
            }}
            .result {{
                color: {'green' if result == 'Positive' else 'red'};
                font-weight: bold;
                font-size: 1.2em;
            }}
        </style>
    </head>
    <body>
        <div class="container">
            <h1>Medical Report</h1>
            <p><strong>Patient Name:</strong> {patient_name}</p>
            <p><strong>Disease Type:</strong> {disease_type}</p>
            <h2>Result: <span class="result">{result}</span></h2>
            <div class="disclaimer">
                <p><em>This result was generated by a Machine Learning model with 85% accuracy. Please consult a Medical Specialist for further treatment.</em></p>
            </div>
        </div>
    </body>
    </html>
    """
    return html_body


def is_user_name_unique(username):
    all_users = User.objects.all()
    all_usernames = [user.username for user in all_users]
    return username not in all_usernames
    

def calculate_age(birth_date):
    today = datetime.now()
    age = today.year - birth_date.year - ((today.month, today.day) < (birth_date.month, birth_date.day))
    return age

def email_alert(subject,body,to):
    try:
        msg = EmailMessage()
        msg.set_content(body, subtype='html')
        msg['subject'] = subject
        msg['to'] = to
        msg['from'] = "healthguardianpro@gmail.com"

        user = "healthguardianpro@gmail.com"
        password = "pormfgtduzibppil"

        server = smtplib.SMTP("smtp.gmail.com",587)
        server.starttls()
        server.login(user,password)
        server.send_message(msg)

        server.quit()

    except(TypeError,ValueError):
        print("Mail Sending Error")
   